---

- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Include default vars
      ansible.builtin.include_vars:
        # dir: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/'
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/jwt-cli.yml'
        # extensions:
        #   - 'yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include default vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/gum.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include default vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/k9s.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include default vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/task.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include eksctl vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/eksctl.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include helmdocs vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/helmdocs.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include helmfile vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/helmfile.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include kfilt vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/kfilt.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include gocrypt vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/gocrypt.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include osv-scanner vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/osv-scanner.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include ekspodlogs vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/ekspodlogs.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include popeye vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/popeye.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    # do not work on old OS because of the python version...
    # - name: Include pre-commit vars
    #   ansible.builtin.include_vars:
    #     file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/pre-commit.yml'

    # - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
    #   ansible.builtin.stat:
    #     path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
    #   register: gh_role_installer_present
    # - name: Check binary is present {{ gh_role_installer_binary_name }}
    #   ansible.builtin.assert:
    #     that:
    #       - gh_role_installer_present.stat.exists
    #     fail_msg: "gh_role_installer not setup"
    #     success_msg: "gh_role_installer is setup"

    - name: Include stern vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/stern.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include chglog vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/chglog.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include lsd vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/lsd.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"

    - name: Include zellij vars
      ansible.builtin.include_vars:
        file: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/defaults/zellij.yml'

    - name: Stat gh_role_installer {{ gh_role_installer_binary_name }}
      ansible.builtin.stat:
        path: "{{ gh_role_install_directory }}/{{ gh_role_installer_binary_name }}"
      register: gh_role_installer_present
    - name: Check binary is present {{ gh_role_installer_binary_name }}
      ansible.builtin.assert:
        that:
          - gh_role_installer_present.stat.exists
        fail_msg: "gh_role_installer not setup"
        success_msg: "gh_role_installer is setup"
